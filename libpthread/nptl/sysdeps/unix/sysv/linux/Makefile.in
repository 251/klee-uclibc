# Makefile for uClibc NPTL
#
# Copyright (C) 2006 Steven J. Hill <sjhill@uclibc.org>
#
# Licensed under the LGPL v2.1, see the file COPYING.LIB in this tarball.
#

libpthread_CSRC = pt-raise.c pthread_attr_getaffinity.c			\
		  pthread_attr_setaffinity.c pthread_getaffinity.c	\
		  pthread_getcpuclockid.c pthread_kill.c		\
		  pthread_mutex_cond_lock.c pthread_setaffinity.c	\
		  pthread_yield.c sem_post.c sem_timedwait.c		\
		  sem_trywait.c sem_wait.c pt-fork.c			\
		  sigtimedwait.c sigwaitinfo.c sigwait.c sleep.c

libpthread_SSRC = #ptw-close.S ptw-open.S ptw-waitid.S ptw-waidpid.S ptw-write.S

libc_CSRC = libc_pthread_init.c libc_multiple_threads.c			\
	    register-atfork.c unregister-atfork.c getpid.c		\
	    raise.c sleep.c

libc_SSRC = #close.S open.S waitid.S waidpid.S write.S

ifeq ($(TARGET_ARCH),alpha)
libpthread_CSRC += lowlevellock.c
libc_CSRC += libc-lowlevellock.c
endif

ifeq ($(TARGET_ARCH),mips)
libpthread_CSRC += lowlevellock.c
libc_CSRC += libc-lowlevellock.c
endif

ifeq ($(TARGET_ARCH),powerpc)
libpthread_CSRC += lowlevellock.c
libc_CSRC += libc-lowlevellock.c
endif

ifeq ($(TARGET_ARCH),sparc)
libpthread_CSRC += lowlevellock.c
libc_CSRC += libc-lowlevellock.c
endif

CFLAGS-pt-fork.c = -D_GNU_SOURCE
CFLAGS-pthread_getcpuclockid.c = -I$(top_srcdir)/librt

CFLAGS-linux = -DNOT_IN_libc=1 -DIS_IN_libpthread=1 $(SSP_ALL_CFLAGS)
#CFLAGS:=$(CFLAGS:-O1=-O2)

CFLAGS-OMIT-libc_pthread_init.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-libc_multiple_threads.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-register-atfork.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-unregister-atfork.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-getpid.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-raise.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-sleep.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1
CFLAGS-OMIT-libc-lowlevellock.c = -DNOT_IN_libc=1 -DIS_IN_libpthread=1

PTHREAD_LINUX_DIR := $(top_srcdir)/libpthread/nptl/sysdeps/unix/sysv/linux
PTHREAD_LINUX_OUT := $(top_builddir)/libpthread/nptl/sysdeps/unix/sysv/linux

PTHREAD_LINUX_OBJ := $(patsubst %.c,$(PTHREAD_LINUX_OUT)/%.o,$(libpthread_CSRC))
PTHREAD_LINUX_OBJ += $(patsubst %.S,$(PTHREAD_LINUX_OUT)/%.o,$(libpthread_SSRC))

libpthread-a-y += $(PTHREAD_LINUX_OBJ)
libpthread-so-y += $(PTHREAD_LINUX_OBJ:.o=.oS)

libpthread-nomulti-y += $(PTHREAD_LINUX_OBJ)

LIBC_LINUX_OBJ := $(patsubst %.c,$(PTHREAD_LINUX_OUT)/%.o,$(libc_CSRC))
LIBC_LINUX_OBJ += $(patsubst %.S,$(PTHREAD_LINUX_OUT)/%.o,$(libc_SSRC))

libc-a-y += $(LIBC_LINUX_OBJ)
libc-so-y += $(LIBC_LINUX_OBJ:.o=.oS)

libc-nomulti-y += $(LIBC_LINUX_OBJ)

objclean-y += nptl_linux_objclean
headers_clean-y += nptl_linux_headers_clean

#
# Create header files.
#
CFLAGS-lowlevelbarrier.c = -S
CFLAGS-lowlevelcond.c = -S
CFLAGS-lowlevelrwlock.c = -S
CFLAGS-unwindbuf.c = -S

$(PTHREAD_LINUX_OUT)/lowlevelbarrier.c: $(PTHREAD_LINUX_DIR)/lowlevelbarrier.sym
	awk -f $(top_srcdir)extra/scripts/gen-as-const.awk $< > $@

$(PTHREAD_LINUX_OUT)/lowlevelcond.c: $(PTHREAD_LINUX_DIR)/lowlevelcond.sym
	awk -f $(top_srcdir)extra/scripts/gen-as-const.awk $< > $@

$(PTHREAD_LINUX_OUT)/lowlevelrwlock.c: $(PTHREAD_LINUX_DIR)/lowlevelrwlock.sym
	awk -f $(top_srcdir)extra/scripts/gen-as-const.awk $< > $@

$(PTHREAD_LINUX_OUT)/unwindbuf.c: $(PTHREAD_LINUX_DIR)/unwindbuf.sym
	awk -f $(top_srcdir)extra/scripts/gen-as-const.awk $< > $@

$(PTHREAD_LINUX_OUT)/lowlevelbarrier.s: $(PTHREAD_LINUX_OUT)/lowlevelbarrier.c
	$(compile.c)

$(PTHREAD_LINUX_OUT)/lowlevelcond.s: $(PTHREAD_LINUX_OUT)/lowlevelcond.c
	$(compile.c)

$(PTHREAD_LINUX_OUT)/lowlevelrwlock.s: $(PTHREAD_LINUX_OUT)/lowlevelrwlock.c
	$(compile.c)

$(PTHREAD_LINUX_OUT)/unwindbuf.s: $(PTHREAD_LINUX_OUT)/unwindbuf.c
	$(compile.c)

$(PTHREAD_LINUX_OUT)/lowlevelbarrier.h: $(PTHREAD_LINUX_OUT)/lowlevelbarrier.s
	@sed -n "s/^.*@@@name@@@\([^@]*\)@@@value@@@[^0-9Xxa-fA-F-]*\([0-9Xxa-fA-F-][0-9Xxa-fA-F-]*\).*@@@end@@@.*$\/#define \1 \2/p" $< > $@

$(PTHREAD_LINUX_OUT)/lowlevelcond.h: $(PTHREAD_LINUX_OUT)/lowlevelcond.s
	@sed -n "s/^.*@@@name@@@\([^@]*\)@@@value@@@[^0-9Xxa-fA-F-]*\([0-9Xxa-fA-F-][0-9Xxa-fA-F-]*\).*@@@end@@@.*$\/#define \1 \2/p" $< > $@

$(PTHREAD_LINUX_OUT)/lowlevelrwlock.h: $(PTHREAD_LINUX_OUT)/lowlevelrwlock.s
	@sed -n "s/^.*@@@name@@@\([^@]*\)@@@value@@@[^0-9Xxa-fA-F-]*\([0-9Xxa-fA-F-][0-9Xxa-fA-F-]*\).*@@@end@@@.*$\/#define \1 \2/p" $< > $@

$(PTHREAD_LINUX_OUT)/unwindbuf.h: $(PTHREAD_LINUX_OUT)/unwindbuf.s
	@sed -n "s/^.*@@@name@@@\([^@]*\)@@@value@@@[^0-9Xxa-fA-F-]*\([0-9Xxa-fA-F-][0-9Xxa-fA-F-]*\).*@@@end@@@.*$\/#define \1 \2/p" $< > $@

ptw-%.oS:
	$(PTHREAD_LINUX_OUT)/sjh.sh $* > $(PTHREAD_LINUX_OUT)/tmp.S
	$(compile.S) -x assembler-with-cpp tmp.S

nptl_linux_headers:
	$(MAKE) $(PTHREAD_LINUX_OUT)/lowlevelbarrier.h
	$(MAKE) $(PTHREAD_LINUX_OUT)/lowlevelcond.h
	$(MAKE) $(PTHREAD_LINUX_OUT)/lowlevelrwlock.h
	$(MAKE) $(PTHREAD_LINUX_OUT)/unwindbuf.h
	$(LN) -sf ../../$(PTHREAD_LINUX_DIR)/bits/local_lim.h $(top_builddir)include/bits

nptl_linux_headers_clean:
	$(RM) $(PTHREAD_LINUX_OUT)/lowlevelbarrier.{c,h,s}	\
	$(RM) $(PTHREAD_LINUX_OUT)/lowlevelcond.{c,h,s}		\
	$(RM) $(PTHREAD_LINUX_OUT)/lowlevelrwlock.{c,h,s}	\
	$(RM) $(PTHREAD_LINUX_OUT)/unwindbuf.{c,h,s}

nptl_linux_objclean:
	$(RM) $(PTHREAD_LINUX_OUT)/*.{o,os,oS}
